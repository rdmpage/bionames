{
   "_id": "_design/darwincorearchive",
   "_rev": "11-1481d2da0d944da2e388eb053f9dbc7a",
   "language": "javascript",
   "lists": {
       "publication_tsv": "function(head,req) { var headers = ''; var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { if (headers == '') { headers='id\\tpublicationType\\tfull_reference\\tauthorList\\teditorList\\tprimaryTitle\\tcreated\\ttitle\\tissn\\toclcnum\\tvolume\\tissue\\tspage\\tepage\\tisbn\\turl\\tpdf\\tdoi\\thandle\\tpmid'; send(headers +'\\n'); } send(row.value + '\\n'); } }",
       "taxa_tsv": "function(head,req) { var headers = ''; var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { if (headers == '') { headers='taxonID\\treferences\\tscientificNameID\\tscientificName\\tscientificNameAuthorship\\ttaxonRank\\tuninomial\\tgenusPart\\tinfragenericEpithet\\tspecificEpithet\\tinfraspecificEpithet\\tnomenclaturalCode\\thigherClassification\\tnamePublishedInID'; send(headers +'\\n'); } send(row.value + '\\n'); } }"
   },
   "views": {
       "publication": {
           "map": "function clean_string(string) {\n  string = string.replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n  string = string.replace(/^\\s+/, '');\n  string = string.replace(/\\s+$/, '');\n  return string;\n}\n\n\nfunction(doc) {\n  var types = ['article','book','chapter','generic'];\n  var type = types.indexOf(doc.type);\n  if (type != -1) {\n    var row = new Array();\n\n    row.push('http://bionames.org/references/' + doc._id);\n\n\n     switch (doc.type) {\n       case 'article':\n       case 'book':\n       case 'chapter':\n       case 'thesis':\n         row.push(doc.type);\n         break;  \n       default:\n         row.push('document');\n         break;\n     }   \n\n    var full_reference = '';\n    if (doc.citation_string) {\n       full_reference = clean_string(doc.citation_string);\n    }\n\n    row.push(full_reference);\n    \n\n    // article/chapter authors\n     var creator = [];\n     if (doc.author) {\n       for(var i in doc.author) {\n         if (doc.author[i].name) {\n           creator.push(clean_string(doc.author[i].name));\n           }\n       }\n     }\n     row.push(creator.join(';'));\n\n     var editor = [];\n\n\n     row.push(editor.join(';'));\n    \n       \n     row.push(clean_string(doc.title));\n\n     var year = '';\n     if (doc.year) { year = doc.year; }\n     row.push(year);\n\n     var journal = '';\n     var issn = '';\n     var oclc = '';\n     var volume = '';\n     var issue = '';\n     var spage = '';\n     var epage = '';\n     var isbn = '';\n     if (doc.journal)\n     {\n        if (doc.journal.name) {\n           journal = doc.journal.name;\n        }\n       if (doc.journal.volume) {\n           volume = doc.journal.volume;\n        }\n       if (doc.journal.issue) {\n           issue = doc.journal.issue;\n        }\n        if (doc.journal.pages) {\n          var startingPage = doc.journal.pages;\n          var delimiter = doc.journal.pages.indexOf('-');\n          if (delimiter != -1) {\n              spage = doc.journal.pages.substring(0, delimiter);\n              epage = doc.journal.pages.substring(delimiter+2);\n          }\n        } \n\n\n\t   if (doc.journal.identifier) {   \n\t\t  for (var i in doc.journal.identifier) {      \n\t\t\t if (doc.journal.identifier[i].type == \"issn\") {\n\t\t\t\tissn = doc.journal.identifier[i].id;\n\t\t\t}\n\t\t\t if (doc.journal.identifier[i].type == \"oclc\") {\n\t\t\t\toclc = doc.journal.identifier[i].id;\n\t\t\t}\n\t\t  }\n\t   }\n\n\n     }\n\n\n    if (doc.book)\n     {\n        if (doc.book.title) {\n           journal = doc.book.title;\n        }\n       if (doc.book.volume) {\n           volume = doc.book.volume;\n        }\n        if (doc.book.pages) {\n          var startingPage = doc.book.pages;\n          var delimiter = doc.book.pages.indexOf('-');\n          if (delimiter != -1) {\n              spage = doc.book.pages.substring(0, delimiter);\n              epage = doc.book.pages.substring(delimiter+2);\n          }\n        } \n\n\n\t   if (doc.book.identifier) {   \n\t\t  for (var i in doc.book.identifier) {      \n\t\t\t if (doc.book.identifier[i].type == \"isbn\") {\n\t\t\t\tisbn = doc.book.identifier[i].id;\n\t\t\t}\n\t\t  }\n\t   }\n\n\n     }\n\n\n     row.push(journal);\n     row.push(issn);\n     row.push(oclc);\n     row.push(volume);\n     row.push(issue);\n     row.push(spage);\n     row.push(epage);\n     row.push(isbn);\n \n     // Pick a URL, and look for PDF\n     var url = '';\n     var pdf = '';\n     \n      // BioStor, JSTOR, etc. as identifier\n      if (doc.identifier) {\n          for (var i in doc.identifier) {\n            switch (doc.identifier[i].type) {\n              case 'biostor':\n                url = 'http://biostor.org/reference/' + doc.identifier[i].id;\n                break;\n              case 'jstor':\n                if (url == '') {\n                  url = 'http://www.jstor.org/stable/' + doc.identifier[i].id;\n                }\n                break;\n              default:\n                break;\n            }\n          }\n       }\n     \n      // URLs\n      if (doc.link)\n       {\n          for (var i in doc.link)\n          {\n            if (doc.link[i].anchor == \"LINK\")\n            {\n               if (url == '') {\n                    url = doc.link[i].url;\n              }\n            }\n            if (doc.link[i].anchor == \"PDF\")\n            {\n               pdf = doc.link[i].url;\n            }\n          }\n       }\n    row.push(url);\n    row.push(pdf);\n\n     var doi = '';\n      if (doc.identifier)\n       {\n          for (var i in doc.identifier)\n          {\n            if (doc.identifier[i].type == \"doi\")\n            {\n             // doi = 'http://dx.doi.org/' + doc.identifier[i].id;\n              doi = doc.identifier[i].id;\n            }\n          }\n       }\n\n         row.push(doi);\n\n     // handle\n      var handle = '';\n      if (doc.identifier)\n       {\n          for (var i in doc.identifier)\n          {\n            if (doc.identifier[i].type == \"handle\")\n            {\n              //handle = 'http://hdl.handle.net/' + doc.identifier[i].id;\n              handle = doc.identifier[i].id;\n            }\n          }\n       }\n      row.push(handle);\n\n    // pmid\n      var pmid = '';\n      if (doc.identifier)\n       {\n          for (var i in doc.identifier)\n          {\n            if (doc.identifier[i].type == \"pmid\")\n            {\n               pmid = doc.identifier[i].id;\n            }\n          }\n       }\n\n       row.push(pmid);\n  \n   /*\n    // Zoobank\n      var zoobank= '';\n      if (doc.identifier)\n       {\n          for (var i in doc.identifier)\n          {\n            if (doc.identifier[i].type == \"zoobank\")\n            {\n               zoobank = doc.identifier[i].id.toLowerCase();\n            }\n          }\n       }\n\n       row.push(zoobank);\n    */\n  \n     emit(doc._id, row.join('\\t'));\n     //emit(doc._id, row);\n  \n  }\n}"
       },
       "taxa": {
           "map": "function(doc) { \n  if (doc.type == 'nameCluster') {\n \n \n      /* basic details of name */\n      var row = new Array();\n\n      row.push('http://bionames.org/names/' + doc._id);\n\n      // \"references\"\n      row.push('http://bionames.org/names/' + doc._id);\n\n      // ION\n      var id = '';\n      if (doc.names) {\n        id = doc.names[0].id;\n      }\n      row.push(id);\n\n      row.push(doc.nameComplete);\n      var taxonAuthor = '';\n      if (doc.taxonAuthor) { \n        taxonAuthor = doc.taxonAuthor; \n      }\n      row.push(taxonAuthor);\n\n      var rankString = '';\n      if (doc.rankString) { \n        rankString = doc.rankString; \n      }\n      row.push(rankString);\n\n      /* name parts */\n      var uninomial = '';\n      if (doc.uninomial) { \n        uninomial = doc.uninomial;\n      }     \n      row.push(uninomial);\n\n      var genusPart = '';\n      if (doc.genusPart) { \n        genusPart = doc.genusPart;\n      }     \n      row.push(genusPart);\n\n      var infragenericPart = '';\n      if (doc.infragenericPart) { \n        infragenericPart = doc.infragenericPart;\n      }     \n      row.push(infragenericPart);\n\n      var specificEpithet = '';\n      if (doc.specificEpithet) { \n        specificEpithet = doc.specificEpithet;\n      }     \n      row.push(specificEpithet);\n\n      var infraspecificEpithet = '';\n      if (doc.infraspecificEpithet) { \n        infraspecificEpithet = doc.infraspecificEpithet;\n      }     \n      row.push(infraspecificEpithet);\n\n\n      /* code */\n      var nomenclaturalCode = '';\n      if (doc.nomenclaturalCode) { \n        nomenclaturalCode = doc.nomenclaturalCode;\n      }     \n      row.push(nomenclaturalCode);\n\n      /* classification */\n      var higherClassification = '';\n      if (doc.group) { \n        higherClassification = doc.group.join(';');\n      }     \n      row.push(higherClassification);\n\n      /* publication details */\n      var publishedInCitation = '';\n      if (doc.publishedInCitation) { \n        publishedInCitation = 'http://bionames.org/references/' + doc.publishedInCitation[0];\n      }\n      row.push(publishedInCitation);\n      emit(doc._id, row.join('\\t'));\n     }\n  \n}"
       },
       "taxa_references": {
           "map": "// Output links between taxa and publications,\n// query this using include_docs to build references table for\n// DwCA file.\n// see http://stackoverflow.com/a/14603090/9684\nfunction(doc) { \n  if (doc.type == 'nameCluster') {\n\t\t\n      if (doc.publishedInCitation) { \n        emit('http://bionames.org/names/' + doc._id, doc.publishedInCitation[0]);\n      \n    }\n  }\n}"
       }
   }
}